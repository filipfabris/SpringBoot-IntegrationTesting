plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'com.approvaltests:approvaltests:18.5.0'

    // AssertJ
    testImplementation 'org.assertj:assertj-core:3.23.1'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

// kreira zip za predavanja
tasks.register('lectureZip', Zip) {
  group = "build"
  from project.fileTree("$project.projectDir") {
      exclude "$buildDir.name/**"
      exclude "bin/**"
      exclude ".gradle/**"
  }
  archiveFileName = project.name + ".zip"
  destinationDirectory = file("$buildDir")
}